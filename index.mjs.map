{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isEvenf from '@stdlib/math-base-assert-is-evenf';\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32';\n\n\n// MAIN //\n\n/**\n* Tests if a finite single-precision floating-point number is an odd number.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an odd number\n*\n* @example\n* var bool = isOddf( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isOddf( -2.0 );\n* // returns false\n*\n* @example\n* var bool = isOddf( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isOddf( NaN );\n* // returns false\n*/\nfunction isOddf( x ) {\n\t// Check sign to prevent overflow...\n\tx = float64ToFloat32( x );\n\tif ( x > 0.0 ) {\n\t\treturn isEvenf( float64ToFloat32( x - 1.0 ) );\n\t}\n\treturn isEvenf( float64ToFloat32( x + 1.0 ) );\n}\n\n\n// EXPORTS //\n\nexport default isOddf;\n"],"names":["isOddf","x","float64ToFloat32","isEvenf"],"mappings":";;sMAkDA,SAASA,EAAQC,GAGhB,OADAA,EAAIC,EAAkBD,GAEdE,EAASD,EADZD,EAAI,EAC0BA,EAAI,EAELA,EAAI,GACvC"}